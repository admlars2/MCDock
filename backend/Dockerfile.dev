FROM python:3.11-slim

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1

# system deps
# --- system deps -------------------------------------------------
RUN apt-get update && apt-get install -y --no-install-recommends \
        ca-certificates curl gnupg lsb-release

# --- add Dockerâ€™s official repo ---------------------------------
RUN install -m 0755 -d /etc/apt/keyrings \
 && curl -fsSL https://download.docker.com/linux/debian/gpg \
      | gpg --dearmor -o /etc/apt/keyrings/docker.gpg \
 && echo \
   "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] \
        https://download.docker.com/linux/debian \
        $(. /etc/os-release && echo $VERSION_CODENAME) stable" \
   > /etc/apt/sources.list.d/docker.list

# --- install CLI + compose plugin -------------------------------
RUN apt-get update && apt-get install -y --no-install-recommends \
        docker-ce-cli docker-compose-plugin \
 && rm -rf /var/lib/apt/lists/*

# Poetry
ENV POETRY_VERSION=1.8.2 \
    POETRY_VIRTUALENVS_CREATE=false
RUN pip install "poetry==$POETRY_VERSION"

# copy lockfiles & install *all* deps (main + dev)
WORKDIR /app
COPY /pyproject.toml /poetry.lock* ./
RUN poetry install --no-interaction --no-ansi

# copy source last (but we'll mount it in Compose)
COPY mcdock ./mcdock
COPY tests ./tests

EXPOSE 8000
CMD ["uvicorn", "mcdock.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
